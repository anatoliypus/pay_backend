{
  _events: {
    close: undefined,
    error: undefined,
    data: undefined,
    end: undefined,
    readable: undefined
  },
  _readableState: ReadableState {
    highWaterMark: 65536,
    buffer: [],
    bufferIndex: 0,
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    Symbol(kState): 1315084
  },
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array],
      error: [Array],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain],
      data: [Function: bound socketOnData],
      end: [Array],
      readable: undefined,
      timeout: [Function: socketOnTimeout],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _readableState: ReadableState {
      highWaterMark: 65536,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 193997060
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      Symbol(kState): 17564420,
      Symbol(kBufferedValue): null
    },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::10000',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 4,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 907,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6,
        Symbol(triggerId): 5,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::10000',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 4,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 907,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6,
        Symbol(triggerId): 5,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      Symbol(resource_symbol): [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      _startAt: undefined,
      _startTime: undefined,
      writeHead: [Function: writeHead],
      __onFinished: [Function],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Circular *1],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 65536,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    _peername: { address: '::1', family: 'IPv6', port: 51322 },
    Symbol(async_id_symbol): 68,
    Symbol(kHandle): TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      Symbol(owner_symbol): [Circular *1]
    },
    Symbol(lastWriteQueueSize): 0,
    Symbol(timeout): null,
    Symbol(kBuffer): null,
    Symbol(kBufferCb): null,
    Symbol(kBufferGen): null,
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kSetNoDelay): true,
    Symbol(kSetKeepAlive): false,
    Symbol(kSetKeepAliveInitialDelay): 0,
    Symbol(kBytesRead): 0,
    Symbol(kBytesWritten): 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  rawHeaders: [
    'Host',
    'pay-backend-did2.onrender.com',
    'User-Agent',
    'YandexPay/1.0',
    'Content-Length',
    '541',
    'Accept',
    '*/*',
    'Accept-Encoding',
    'gzip, br',
    'Cdn-Loop',
    'cloudflare; loops=1',
    'Cf-Connecting-Ip',
    '5.45.207.45',
    'Cf-Ipcountry',
    'RU',
    'Cf-Ray',
    '93f99e7daf25ec47-PDX',
    'Cf-Visitor',
    '{"scheme":"https"}',
    'Content-Type',
    'application/octet-stream',
    'Render-Proxy-Ttl',
    '4',
    'Rndr-Id',
    'f5063714-0833-4a7a',
    'Traceparent',
    '00-215f5a26931e9577004738e6f757a653-77034f0fd040c457-01',
    'Tracestate',
    'depth=7',
    'True-Client-Ip',
    '5.45.207.45',
    'X-Forwarded-For',
    '5.45.207.45, 172.68.174.110, 10.220.234.224',
    'X-Forwarded-Proto',
    'https',
    'X-Request-Id',
    '2adff5c9-b327-4ba8-9c51-76d79c5b6f7b',
    'X-Request-Start',
    '1747217566472444',
    'X-Request-Timeout',
    '20000'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/v1/webhook',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array],
      error: [Array],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain],
      data: [Function: bound socketOnData],
      end: [Array],
      readable: undefined,
      timeout: [Function: socketOnTimeout],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _readableState: ReadableState {
      highWaterMark: 65536,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 193997060
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      Symbol(kState): 17564420,
      Symbol(kBufferedValue): null
    },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::10000',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 4,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 907,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6,
        Symbol(triggerId): 5,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::10000',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 4,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 907,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6,
        Symbol(triggerId): 5,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      Symbol(resource_symbol): [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      _startAt: undefined,
      _startTime: undefined,
      writeHead: [Function: writeHead],
      __onFinished: [Function],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Circular *1],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 65536,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    _peername: { address: '::1', family: 'IPv6', port: 51322 },
    Symbol(async_id_symbol): 68,
    Symbol(kHandle): TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      Symbol(owner_symbol): [Circular *1]
    },
    Symbol(lastWriteQueueSize): 0,
    Symbol(timeout): null,
    Symbol(kBuffer): null,
    Symbol(kBufferCb): null,
    Symbol(kBufferGen): null,
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kSetNoDelay): true,
    Symbol(kSetKeepAlive): false,
    Symbol(kSetKeepAliveInitialDelay): 0,
    Symbol(kBytesRead): 0,
    Symbol(kBytesWritten): 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/v1/webhook',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/v1/webhook',
    path: '/v1/webhook',
    href: '/v1/webhook',
    _raw: '/v1/webhook'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] {
      finish: [Array],
      end: [Function: onevent]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    _startAt: undefined,
    _startTime: undefined,
    writeHead: [Function: writeHead],
    __onFinished: [Function: listener] { queue: [Array] },
    Symbol(shapeMode): false,
    Symbol(kCapture): false,
    Symbol(kBytesWritten): 0,
    Symbol(kNeedDrain): false,
    Symbol(corked): 0,
    Symbol(kChunkedBuffer): [],
    Symbol(kChunkedLength): 0,
    Symbol(kSocket): <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *3],
      _peername: [Object],
      Symbol(async_id_symbol): 68,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): null,
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    Symbol(kOutHeaders): [Object: null prototype] { 'x-powered-by': [Array] },
    Symbol(errored): null,
    Symbol(kHighWaterMark): 65536,
    Symbol(kRejectNonStandardBodyWrites): false,
    Symbol(kUniqueHeaders): null
  },
  body: {},
  _startAt: [ 186475, 957607523 ],
  _startTime: 2025-05-14T10:12:46.473Z,
  _remoteAddress: '::1',
  route: Route {
    path: '/v1/webhook',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  Symbol(shapeMode): true,
  Symbol(kCapture): false,
  Symbol(kHeaders): {
    host: 'pay-backend-did2.onrender.com',
    'user-agent': 'YandexPay/1.0',
    'content-length': '541',
    accept: '*/*',
    'accept-encoding': 'gzip, br',
    'cdn-loop': 'cloudflare; loops=1',
    'cf-connecting-ip': '5.45.207.45',
    'cf-ipcountry': 'RU',
    'cf-ray': '93f99e7daf25ec47-PDX',
    'cf-visitor': '{"scheme":"https"}',
    'content-type': 'application/octet-stream',
    'render-proxy-ttl': '4',
    'rndr-id': 'f5063714-0833-4a7a',
    traceparent: '00-215f5a26931e9577004738e6f757a653-77034f0fd040c457-01',
    tracestate: 'depth=7',
    'true-client-ip': '5.45.207.45',
    'x-forwarded-for': '5.45.207.45, 172.68.174.110, 10.220.234.224',
    'x-forwarded-proto': 'https',
    'x-request-id': '2adff5c9-b327-4ba8-9c51-76d79c5b6f7b',
    'x-request-start': '1747217566472444',
    'x-request-timeout': '20000'
  },
  Symbol(kHeadersCount): 42,
  Symbol(kTrailers): null,
  Symbol(kTrailersCount): 0
}